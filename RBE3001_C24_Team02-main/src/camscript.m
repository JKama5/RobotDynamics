% Auto-generated by cameraCalibrator app on 21-Feb-2024
%-------------------------------------------------------


% Define images to process
imageFileNames = {'/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image1.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image2.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image3.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image5.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image6.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image11.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image19.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image20.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image21.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image22.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image23.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image24.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image25.png',...
    '/home/nnessig/rbe-3001/rbe3001/camera_calibration/intrensive/Image26.png',...
    };
% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
squareSize = 25;  % in units of 'millimeters'
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera using fisheye parameters
[cameraParams, imagesUsed, estimationErrors] = estimateFisheyeParameters(imagePoints, worldPoints, ...
    [mrows, ncols], ...
    'EstimateAlignment', false, ...
    'WorldUnits', 'millimeters');
% 
% % View reprojection errors
% h1=figure; showReprojectionErrors(cameraParams);
% 
% % Visualize pattern locations
% h2=figure; showExtrinsics(cameraParams, 'CameraCentric');
% 
% % Display parameter estimation errors
% displayErrors(estimationErrors, cameraParams);
% 
% % For example, you can use the calibration data to remove effects of lens distortion.
% undistortedImage = undistortFisheyeImage(originalImage, cameraParams.Intrinsics);
% 
% % See additional examples of how to use the calibration data.  At the prompt type:
% % showdemo('MeasuringPlanarObjectsExample')
% % showdemo('StructureFromMotionExample')
